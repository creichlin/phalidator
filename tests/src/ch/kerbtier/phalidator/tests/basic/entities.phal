length {
  val1: length > 4
  val2: length < 4
  val3: length >= 4
  val4: length <= 4
  val5: length == 5
  val6: length in 3..5
}

in {
  val1: . in ["FOO", "BAR"]
  val2: . in "ABCD"
  val3: length in [1, 2, 3, 4]
  val4: length in 1..4
  val5: letters in "ABCDE"
  val6: letters in ["x", "y", "z"]
}

booleanOperators {
  less: 3 < 4 and 2 < 4 and -3 < 4 and !(4 < 4 or 4 < 5)
  more: 4 > 3 and 5 > -3 and -3 > -8 and !(3 > 4 or 5 > 5)
  less_equals: 3 >= 3 and 3 >= 2 and !(3 >= 4)
  more_equals: 3 <= 3 and 3 <= 4 and !(4 <= 3)
  equals: 3 == 3 and !(2 == 3)
  str_equals : "AA" == "AA" and !("AB" == "BA")
  unequals: 2 != 3 and 3 != 2 and !(3 != 3)
}

regexpMatch {
  email: "john.doe@company.com" matches /[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,8}/
  domain: "www.hippi.com-pany.com" matches /[A-Za-z0-9-]+(\.[A-Za-z0-9-]+)+/
}

fieldReferences {
  test1: $field1 == "foo"
  test2: $field1.length == 3
  test3: $field1.letters in "fo"
  test4: $field1 != $field2
  test5: $field1.length == $field2.length
  test6: $field2 == "bar"
}